name: GameCI Template 🎮

on: push:
      branches:
        - master

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  ROOT_FOLDER: "TicTacToe.Client"

jobs:
  testRunner:
    name: Test in ${{ matrix.testMode }} ✨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: ${{env.ROOT_FOLDER}}/Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-

  buildWindows:
    needs: testRunner
    name: Build for Windows 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: ${{env.ROOT_FOLDER}}/Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          projectPath: ${{env.ROOT_FOLDER}}
          targetPlatform: StandaloneWindows64

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64

  create-release:
    needs: buildWindows
    name: Create Release 🚀
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        with:
          tag_name: v${{github.run_number}} # Replace with the desired tag name for the release
          release_name: Release v${{github.run_number}} # Replace with the desired name for the release
          draft: false
          prerelease: false

      - name: Upload Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/StandaloneWindows64 # Replace with the path to the artifact you want to attach
          asset_name: build-StandaloneWindows64-v${{github.run_number}} # Replace with the desired name for the attached asset
          asset_content_type: application/zip # Replace with the MIME type of the asset


  # deployPages:
  #   needs: buildWebGL
  #   name: Deploy to Github Pages 🚀
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: build-WebGL
  #         path: build

  #     - name: Deploy 🚀
  #       uses: JamesIves/github-pages-deploy-action@4.1.4
  #       with:
  #         branch: gh-pages
  #         folder: build/WebGL
